# <?= $this->className ?>

<?= $this->classDescription->short ?>

<?php if ($this->classDescription->long) : ?>

<?= $this->classDescription->long ?>
<?php endif ?>

<?php if ($interfaces = $this->interfaces): ?>
## Implements:
<?= join(', ', $interfaces); ?>
<?php endif ?>


<?php if ($this->parentClass): ?>
## Extend:

<?= $this->parentClass ?>
<?php endif ?>


<?php if (!empty($this->constants)): ?>
## Constants

| Name | Description |
|------|-------------|
<?php foreach ($this->constants as $name => $info) : ?>
|<?= $this->classShortName.'::'.$name ?> = <?= $info->value ?>|<?= $info->short ?>|
<?php endforeach ?>
<?php endif ?>

<?php if (!empty($this->methods)): ?>
## Methods

| Name | Description |
|------|-------------|
<?php foreach ($this->methods as $name => $info) : ?>
|[<?= $this->classShortName.$info->type.$name ?>()](#<?= strtolower($this->classShortName.($info->type === '->' ? '-' : '').$name) ?>)|<?= $info->shortDescription ?>|
<?php endforeach ?>
<?php endif ?>

<?php if ($this->inheritedMethods): ?>
## Inherited methods

| Name | Description |
|------|-------------|
<?php foreach ($this->inheritedMethods as $name => $info) : ?>
<?php if (isset($info->doclink)): ?>
| [<?= $this->classShortName.$info->type.$name ?>](<?= $info->doclink ?>) | <?= $info->shortDescription ?: '-' ?> |
<?php else: ?>
|<?= $name ?>|<?= $info->shortDescription ?: '-' ?>|
<?php endif ?>
<?php endforeach ?>
<?php endif ?>

---

<?php foreach ($this->methods as $name => $info) : ?>
---

### <?= $this->classShortName . $info->type . $name ?>()

**Description**

<?php $returnValue = $info->returnValue
  ? implode('|', array_map(function ($param) {
    return $param->type ? $param->type : null;
  }, $info->returnValue))
  : 'void'; ?>

```php
<?= $info->visibility ?> <?= $name ?> (<?= join(', ', $info->argumentsList) ?: 'void' ?>): <?= $returnValue."\n" ?>
```

<?= $info->shortDescription ?>

<?php if ($info->longDescription): ?>
<?= "\n".$info->longDescription."\n" ?>
<?php endif ?>

**Parameters**

<?php if (!$info->argumentsDescription) : ?>
`This function has no parameters.`
<?php else : ?>
<?php foreach ($info->argumentsDescription as $param) : ?>
* `(<?= $param->type ?>) <?= $param->name ?>`<?php
  if (! empty(trim($param->desc))) : ?>: <?= str_replace("\n", "  \n", $param->desc) ?>
<?php endif ?>

<?php endforeach ?>
<?php endif ?>


**Return Values**

<?php if (!$info->returnValue) : ?>
`void`
<?php else : ?>
<?php foreach ($info->returnValue as $param) : ?>
`<?= $param->type ?>`

<?php if (! empty(trim($param->desc))) : ?>
> <?= str_replace("\n", "  \n", $param->desc) ?>
<?php endif ?>

<?php endforeach ?>
<?php endif ?>

<?php if ($info->throwsExceptions) : ?>

**Throws Exceptions**

<?php foreach ($info->throwsExceptions as $param) : ?>

`<?= $param->type ?>`
<?php if (! empty(trim($param->desc))) : ?>
> <?= str_replace("\n", "  \n", $param->desc) ?>
<?php endif ?>

<?php endforeach ?>
<?php endif ?>

<?php endforeach ?>
